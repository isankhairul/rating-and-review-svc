basePath: /rating-svc
definitions:
  CreateRatingSubmissonRequest:
    properties:
      comment:
        type: string
        x-go-name: Comment
      ip_address:
        type: string
        x-go-name: IPAddress
      rating_id:
        type: string
        x-go-name: RatingID
      user_agent:
        type: string
        x-go-name: UserAgent
      user_id:
        type: string
        x-go-name: UserID
      user_id_legacy:
        type: string
        x-go-name: UserIDLegacy
      value:
        format: double
        type: number
        x-go-name: Value
    type: object
    x-go-package: go-klikdokter/app/model/request
  CreateRatingTypeNumRequest:
    properties:
      description:
        description: |-
          Description of rating type num
          in: string
        type: string
        x-go-name: Description
      intervals:
        description: |-
          Intervals of rating type num
          in: integer
        format: int64
        type: integer
        x-go-name: Intervals
      max_score:
        description: |-
          Max Score of rating type num
          in: integer
        format: int64
        type: integer
        x-go-name: MaxScore
      min_score:
        description: |-
          Min Score of rating type num
          in: integer
        format: int64
        type: integer
        x-go-name: MinScore
      scale:
        description: |-
          Scale of rating type num
          in: integer
        format: int64
        type: integer
        x-go-name: Scale
      status:
        description: |-
          Status of rating type num
          in: bool
        type: boolean
        x-go-name: Status
      type:
        description: |-
          Type of rating type num
          in: string
        type: string
        x-go-name: Type
    type: object
    x-go-package: go-klikdokter/app/model/request
  DataResponse:
    properties:
      record:
        type: object
        x-go-name: Record
      records:
        type: object
        x-go-name: Records
    type: object
    x-go-name: data
    x-go-package: go-klikdokter/app/model/base
  MetaResponse:
    properties:
      code:
        description: |-
          Code is the response code
          in: int
        format: int64
        type: integer
        x-go-name: Code
      message:
        description: |-
          Message is the response message
          in: string
        type: string
        x-go-name: Message
    type: object
    x-go-name: metaResponse
    x-go-package: go-klikdokter/app/model/base
  ObjectID:
    items:
      format: uint8
      type: integer
    title: ObjectID is the BSON ObjectID type.
    type: array
    x-go-package: go.mongodb.org/mongo-driver/bson/primitive
  PaginationResponse:
    properties:
      limit:
        format: int64
        type: integer
        x-go-name: Limit
      page:
        format: int64
        type: integer
        x-go-name: Page
      records:
        format: int64
        type: integer
        x-go-name: Records
      total_page:
        format: int64
        type: integer
        x-go-name: TotalPage
      total_records:
        format: int64
        type: integer
        x-go-name: TotalRecords
    type: object
    x-go-name: Pagination
    x-go-package: go-klikdokter/app/model/base
  ProductListRequest:
    properties:
      Limit:
        description: |-
          Maximun records per page
          in: int32
        format: int64
        type: integer
      Name:
        description: |-
          Name keyword of the product
          in: string
        type: string
      Page:
        description: |-
          Page No
          in: int32
        format: int64
        type: integer
      Sku:
        type: string
      Sort:
        example: name asc, uom desc
        type: string
      UOM:
        description: |-
          Sku of the product
          in: string
        type: string
    type: object
    x-go-package: go-klikdokter/app/model/request
  Rating:
    properties:
      comment_allowed:
        type: boolean
        x-go-name: CommentAllowed
      description:
        type: string
        x-go-name: Description
      id:
        $ref: '#/definitions/ObjectID'
      name:
        type: string
        x-go-name: Name
      rating_type:
        type: string
        x-go-name: RatingType
      rating_type_id:
        type: string
        x-go-name: RatingTypeId
      source_type:
        type: string
        x-go-name: SourceType
      source_uid:
        type: string
        x-go-name: SourceUid
      status:
        type: boolean
        x-go-name: Status
    type: object
    x-go-name: RatingsCol
    x-go-package: go-klikdokter/app/model/entity
  RatingTypesNumCol:
    properties:
      created_at:
        format: date-time
        type: string
        x-go-name: CreatedAt
      description:
        type: string
        x-go-name: Description
      id:
        $ref: '#/definitions/ObjectID'
      intervals:
        format: int64
        type: integer
        x-go-name: Intervals
      max_score:
        format: int64
        type: integer
        x-go-name: MaxScore
      min_score:
        format: int64
        type: integer
        x-go-name: MinScore
      scale:
        format: int64
        type: integer
        x-go-name: Scale
      status:
        type: boolean
        x-go-name: Status
      type:
        type: string
        x-go-name: Type
      updated_at:
        format: date-time
        type: string
        x-go-name: UpdatedAt
    type: object
    x-go-package: go-klikdokter/app/model/entity
  SaveProductRequest:
    properties:
      name:
        description: |-
          Name of the product
          in: string
        type: string
        x-go-name: Name
      sku:
        description: |-
          Sku of the product
          in: string
        type: string
        x-go-name: Sku
      uid:
        description: |-
          Uid of the product, use this on UPDATE function
          in: int32
        type: string
        x-go-name: Uid
      uom:
        description: |-
          Uom of the product
          in: string
        type: string
        x-go-name: Uom
      weight:
        description: |-
          Weight of the product
          in: int32
        format: int32
        type: integer
        x-go-name: Weight
    type: object
    x-go-package: go-klikdokter/app/model/request
  SuccessResponse:
    properties:
      data:
        $ref: '#/definitions/DataResponse'
      errors:
        description: |-
          Errors is the response message
          in: string
        type: object
        x-go-name: Errors
      meta:
        $ref: '#/definitions/MetaResponse'
      pagination:
        $ref: '#/definitions/PaginationResponse'
    type: object
    x-go-name: responseHttp
    x-go-package: go-klikdokter/app/model/base
  UpdateRatingSubmissonRequest:
    properties:
      comment:
        type: string
        x-go-name: Comment
      id:
        type: string
        x-go-name: ID
      rating_id:
        type: string
        x-go-name: RatingID
      updated_at:
        format: date-time
        type: string
        x-go-name: UpdatedAt
      user_id:
        type: string
        x-go-name: UserID
      user_id_legacy:
        type: string
        x-go-name: UserIDLegacy
      value:
        format: double
        type: number
        x-go-name: Value
    type: object
    x-go-package: go-klikdokter/app/model/request
info:
  title: 'KD Boilerplate Go kit:'
  version: "1.0"
paths:
  /api/v1/rating-submissions:
    get:
      description: Get List Rating Submissions
      operationId: ListRatingSubmissionRequest
      parameters:
      - format: int64
        in: query
        name: page
        type: integer
        x-go-name: Page
      - format: int64
        in: query
        name: limit
        type: integer
        x-go-name: Limit
      - in: query
        name: sort
        type: string
        x-go-name: Sort
      - in: query
        name: dir
        type: string
        x-go-name: Dir
      - in: query
        name: filter
        type: string
        x-go-name: Filter
      responses:
        "200":
          description: SuccessResponse
          schema:
            $ref: '#/definitions/SuccessResponse'
        "401":
          description: SuccessResponse
          schema:
            $ref: '#/definitions/SuccessResponse'
      tags:
      - ratingSubmission
    post:
      description: Create Rating Submission
      operationId: ReqRatingSubmissonBody
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/CreateRatingSubmissonRequest'
        x-go-name: Body
      responses:
        "200":
          description: SuccessResponse
          schema:
            $ref: '#/definitions/SuccessResponse'
        "401":
          description: SuccessResponse
          schema:
            $ref: '#/definitions/SuccessResponse'
      tags:
      - ratingSubmission
  /api/v1/rating-submissions/{id}:
    delete:
      description: Delete Rating Submission
      operationId: ReqDeleteRatingSubmissionById
      parameters:
      - description: ID of Rating Submission
        in: path
        name: id
        required: true
        type: string
        x-go-name: ID
      responses:
        "200":
          description: SuccessResponse
          schema:
            $ref: '#/definitions/SuccessResponse'
        "401":
          description: SuccessResponse
          schema:
            $ref: '#/definitions/SuccessResponse'
      tags:
      - ratingSubmission
    get:
      description: Get Rating Submission By Id
      operationId: ReqRatingSubmissionById
      parameters:
      - description: ID of Rating Submission
        in: path
        name: id
        required: true
        type: string
        x-go-name: ID
      responses:
        "200":
          description: SuccessResponse
          schema:
            $ref: '#/definitions/SuccessResponse'
        "401":
          description: SuccessResponse
          schema:
            $ref: '#/definitions/SuccessResponse'
      tags:
      - ratingSubmission
    put:
      description: Update Rating Submission
      operationId: ReqUpdateRatingSubmissonBody
      parameters:
      - description: ID of Rating Submission
        in: path
        name: id
        required: true
        type: string
        x-go-name: ID
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UpdateRatingSubmissonRequest'
        x-go-name: Body
      responses:
        "200":
          description: SuccessResponse
          schema:
            $ref: '#/definitions/SuccessResponse'
        "401":
          description: SuccessResponse
          schema:
            $ref: '#/definitions/SuccessResponse'
      tags:
      - ratingSubmission
  /api/v1/rating-types-numeric:
    get:
      description: Get Rating Type Nums
      operationId: getRatingTypeNums
      parameters:
      - description: Maximun records per page
        format: int64
        in: query
        name: limit
        type: integer
        x-go-name: Limit
      - description: Page No
        format: int64
        in: query
        name: page
        type: integer
        x-go-name: Page
      - example: name asc, uom desc
        in: query
        name: sort
        type: string
        x-go-name: Sort
      - example: name asc, uom desc
        in: query
        name: dir
        type: string
        x-go-name: Dir
      - in: query
        name: filter
        type: string
        x-go-name: Filter
      responses:
        "200":
          description: SuccessResponse
          schema:
            $ref: '#/definitions/SuccessResponse'
        "401":
          description: SuccessResponse
          schema:
            $ref: '#/definitions/SuccessResponse'
      tags:
      - ratingTypeNum
    post:
      description: Create Rating Type Num
      operationId: createRatingTypeNum
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateRatingTypeNumRequest'
        x-go-name: Body
      responses:
        "200":
          description: SuccessResponse
          schema:
            $ref: '#/definitions/SuccessResponse'
        "401":
          description: SuccessResponse
          schema:
            $ref: '#/definitions/SuccessResponse'
      tags:
      - ratingTypeNum
  /api/v1/rating-types-numeric/{id}:
    delete:
      description: Update Rating Type Num
      operationId: deleteRatingTypeNum
      parameters:
      - in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      responses:
        "200":
          description: SuccessResponse
          schema:
            $ref: '#/definitions/SuccessResponse'
        "401":
          description: SuccessResponse
          schema:
            $ref: '#/definitions/SuccessResponse'
      tags:
      - ratingTypeNum
    get:
      description: Get Rating Type Num By Id
      operationId: getRatingById
      parameters:
      - in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      responses:
        "200":
          description: SuccessResponse
          schema:
            $ref: '#/definitions/SuccessResponse'
        "401":
          description: SuccessResponse
          schema:
            $ref: '#/definitions/SuccessResponse'
      tags:
      - ratingTypeNum
    put:
      description: Update Rating Type Num
      operationId: updateRatingTypeNum
      parameters:
      - in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateRatingTypeNumRequest'
        x-go-name: Body
      responses:
        "200":
          description: SuccessResponse
          schema:
            $ref: '#/definitions/SuccessResponse'
        "401":
          description: SuccessResponse
          schema:
            $ref: '#/definitions/SuccessResponse'
      tags:
      - ratingTypeNum
produces:
- application/json
schemes:
- http
swagger: "2.0"
